create or replace procedure Bill(patient_id in patients.pat_id%type) 
is 
days number(8);
patient_invalid EXCEPTION; 
begin 
    days:=calculateDays(patient_id); 
	if 
    update patients set bill = bill+(3000*days) where pat_id = patient_id; 
    dbms_output.put_line('finalized bill'); 
end;

create or replace PROCEDURE DISCHARGEPROCESS(P_ID IN PATIENTS.PAT_ID%TYPE) 
IS 
BEGIN 
     UPDATE PATIENTS SET ROOM_NO = NULL, ADMITTED = NULL WHERE PAT_ID = P_ID; 
	 UPDATE ROOM SET AVAILABILITY = 'YES', OCCUPIED = 'NO', DISCHARGE = NULL, PAT_ID = NULL WHERE pat_id = p_id; 
END;

create or replace PROCEDURE insertDoctor( 
       d_name IN doctors.doc_name%type, 
	   d_hiredate IN doctors.hire_date%type, 
	   d_salary IN doctors.salary%type, 
	   d_nationality IN doctors.nationality%type, 
	   d_dob IN doctors.dob%type, 
	   d_dept_id in doctors.dept_id%type) 
IS 
BEGIN 
    insert into doctors(doc_name, hire_date, salary, nationality, dob, dept_id) values(d_name, d_hiredate, d_salary, d_nationality, d_dob, d_dept_id); 
end;

create or replace PROCEDURE insertPatient( 
       p_name IN patients.pat_name%type, 
	   p_gender IN patients.gender%type, 
	   p_age IN patients.age%type, 
	   p_diagnosis IN patients.diagnosis%type, 
	   p_docId IN patients.doc_id%type, 
	   p_room in patients.room_no%type, 
	   p_bill in patients.bill%type) 
IS 
BEGIN 
       INSERT INTO PATIENTS( pat_name, gender, age, diagnosis, doc_id, room_no, bill, admitted) VALUES (p_name, p_gender, p_age, p_diagnosis, p_docId, p_room, p_bill, to_date(SYSDATE, 'DD-MM-YYYY')); 
END;

create or replace PROCEDURE updatePatient( 
       p_name IN patients.pat_name%type, 
	   p_gender IN patients.gender%type, 
	   p_age IN patients.age%type, 
	   p_diagnosis IN patients.diagnosis%type, 
	   p_docId IN patients.doc_id%type, 
	   p_room in patients.room_no%type, 
	   p_bill in patients.bill%type, 
	   p_admitted in patients.admitted%type, 
	   p_input_id in patients.pat_id%type) 
IS 
BEGIN 
       UPDATE PATIENTS SET pat_name = p_name, gender = p_gender, age = p_age, diagnosis = p_diagnosis, doc_id = p_docId, room_no = p_room, bill = p_bill, admitted = p_admitted where pat_id = p_input_id; 
END;

create or replace function calculateDays(patient_id in patients.pat_id%type) 
return varchar2 as patientDays varchar2(40); 
begin 
      select (TO_DATE(SYSDATE, 'dd-mm-yyyy') - to_date((select patients.admitted from patients where patients.pat_id =patient_id), 'dd-mm-yyyy')) into patientDays from dual; 
end;